---
- name: configure_beats | Load the Beats Role
  include_role:
    name: beats
  vars:
    elk_ip: "{{ server_ip }}"

#ept getting SSL errors when attempting to load templates and couldn't figure it out. Swapping back to HTTP, loading template, and swapping back to HTTPS works fine.
- name: configure_beats | Swap Back to HTTP to Load Templates (if SSL True)
  replace:
    path: "{{ item.path }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  loop:
    - { path: "{{ elastic_conf }}", regexp: "xpack.security.enabled: true", replace: "#xpack.security.enabled: true" }
    - { path: "{{ elastic_conf }}", regexp: "xpack.security.http.ssl.enabled: true", replace: "#xpack.security.http.ssl.enabled: true" }
    - { path: "{{ elastic_conf }}", regexp: "xpack.security.transport.ssl.enabled: true", replace: "#xpack.security.transport.ssl.enabled: true" }
    - { path: "{{ elastic_conf }}", regexp: "xpack.security.transport.ssl.verification_mode: certificate", replace: "#xpack.security.transport.ssl.verification_mode: certificate" }
    - { path: "{{ elastic_conf }}", regexp: "xpack.security.http.ssl.key: {{ elastic_cert_location }}{{ cert_pem_key_name }}", replace: "#xpack.security.http.ssl.key: {{ elastic_cert_location }}{{ cert_pem_key_name }}" }
    - { path: "{{ elastic_conf }}", regexp: "xpack.security.http.ssl.certificate: {{ elastic_cert_location }}{{ cert_pem_crt_name }}", replace: "#xpack.security.http.ssl.certificate: {{ elastic_cert_location }}{{ cert_pem_crt_name }}" }
    - { path: "{{ elastic_conf }}", regexp: 'xpack.security.http.ssl.certificate_authorities: \["{{ elastic_cert_location }}{{ cert_ca_chain_name }}"]', replace: '#xpack.security.http.ssl.certificate_authorities: ["{{ elastic_cert_location }}{{ cert_ca_chain_name }}"]' }
    - { path: "{{ kibana_conf }}", regexp: "elasticsearch.ssl.certificateAuthorities: {{ kibana_cert_location }}{{ cert_ca_chain_name }}", replace: "#elasticsearch.ssl.certificateAuthorities: {{ kibana_cert_location }}{{ cert_ca_chain_name }}" }
    - { path: "{{ kibana_conf }}", regexp: "server.ssl.enabled: true", replace: "#server.ssl.enabled: true" }
    - { path: "{{ kibana_conf }}", regexp: "server.ssl.key: {{ kibana_cert_location }}{{ cert_pem_key_name }}", replace: "#server.ssl.key: {{ kibana_cert_location }}{{ cert_pem_key_name }}" }
    - { path: "{{ kibana_conf }}", regexp: "server.ssl.certificate: {{ kibana_cert_location }}{{ cert_pem_crt_name }}", replace: "#server.ssl.certificate: {{ kibana_cert_location }}{{ cert_pem_crt_name }}" }
    - { path: "{{ kibana_conf }}", regexp: 'elasticsearch.hosts: \["https://{{ server_ip }}:{{ elastic_port}}"]', replace: 'elasticsearch.hosts: ["http://{{ server_ip }}:{{ elastic_port}}"]' }
  when: ssl_on|bool

- name: configure_beats | Reload Services to HTTP (if SSL True)
  service:
    name: "{{ item }}"
    state: restarted
  loop:
    - kibana
    - elasticsearch
  when: ssl_on|bool

- name: configure_beats | Pause to Let the ElasticSearch Service Fully Start
  pause:
    minutes: 1
  when: ssl_on|bool

- name: configure_beats | Load Filebeat Kibana Dashboard
  command: "/usr/bin/filebeat setup -e -E output.logstash.enabled=false -E output.elasticsearch.hosts=['{{ server_ip}}:{{ elastic_port}}'] -E setup.kibana.host={{ server_ip }}:{{ kibana_port }}"
  changed_when: false

- name: configure_beats | Load Auditbeat Kibana Dashboard
  command: "/usr/bin/auditbeat setup -e -E output.logstash.enabled=false -E output.elasticsearch.hosts=['{{ server_ip}}:{{ elastic_port}}'] -E setup.kibana.host={{ server_ip }}:{{ kibana_port }}"
  changed_when: false

- name: configure_beats | Swap Back to HTTPS (if SSL True)
  replace:
    path: "{{ item.path }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  loop:
    - { path: "{{ elastic_conf }}", regexp: "#xpack.security.enabled: true", replace: "xpack.security.enabled: true" }
    - { path: "{{ elastic_conf }}", regexp: "#xpack.security.http.ssl.enabled: true", replace: "xpack.security.http.ssl.enabled: true" }
    - { path: "{{ elastic_conf }}", regexp: "#xpack.security.transport.ssl.enabled: true", replace: "xpack.security.transport.ssl.enabled: true" }
    - { path: "{{ elastic_conf }}", regexp: "#xpack.security.transport.ssl.verification_mode: certificate", replace: "xpack.security.transport.ssl.verification_mode: certificate" }
    - { path: "{{ elastic_conf }}", regexp: "#xpack.security.http.ssl.key: {{ elastic_cert_location }}{{ cert_pem_key_name }}", replace: "xpack.security.http.ssl.key: {{ elastic_cert_location }}{{ cert_pem_key_name }}" }
    - { path: "{{ elastic_conf }}", regexp: "#xpack.security.http.ssl.certificate: {{ elastic_cert_location }}{{ cert_pem_crt_name }}", replace: "xpack.security.http.ssl.certificate: {{ elastic_cert_location }}{{ cert_pem_crt_name }}" }
    - { path: "{{ elastic_conf }}", regexp: '#xpack.security.http.ssl.certificate_authorities: \["{{ elastic_cert_location }}{{ cert_ca_chain_name }}"]', replace: 'xpack.security.http.ssl.certificate_authorities: ["{{ elastic_cert_location }}{{ cert_ca_chain_name }}"]' }
    - { path: "{{ kibana_conf }}", regexp: "#elasticsearch.ssl.certificateAuthorities: {{ kibana_cert_location }}{{ cert_ca_chain_name }}", replace: "#elasticsearch.ssl.certificateAuthorities: {{ kibana_cert_location }}{{ cert_ca_chain_name }}" }
    - { path: "{{ kibana_conf }}", regexp: "#server.ssl.enabled: true", replace: "server.ssl.enabled: true" }
    - { path: "{{ kibana_conf }}", regexp: "#server.ssl.key: {{ kibana_cert_location }}{{ cert_pem_key_name }}", replace: "server.ssl.key: {{ kibana_cert_location }}{{ cert_pem_key_name }}" }
    - { path: "{{ kibana_conf }}", regexp: "#server.ssl.certificate: {{ kibana_cert_location }}{{ cert_pem_crt_name }}", replace: "server.ssl.certificate: {{ kibana_cert_location }}{{ cert_pem_crt_name }}" }
    - { path: "{{ kibana_conf }}", regexp: 'elasticsearch.hosts: \["http://{{ server_ip }}:{{ elastic_port}}"]', replace: 'elasticsearch.hosts: ["https://{{ server_ip }}:{{ elastic_port}}"]' }
  when: ssl_on|bool

- name: configure_beats | Reload Services to HTTPS (if SSL True)
  service:
    name: "{{ item }}"
    state: restarted
  loop:
    - kibana
    - elasticsearch
  when: ssl_on|bool
