---
- name: configure_ssl | Load Vars
  include_vars: "main.yml"

- name: configure_ssl | Copy the Certs to The Needed Location(s)
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items:
    - { src: "{{ cert_location }}{{ cert_ca_chain_name }}", dest: "{{ logstash_cert_location }}{{ cert_ca_chain_name }}", owner: "root", group: "root", mode: "0644" }
    - { src: "{{ cert_location }}{{ cert_ca_chain_name }}", dest: "{{ kibana_cert_location }}{{ cert_ca_chain_name }}", owner: "root", group: "root", mode: "0644" }
    - { src: "{{ cert_location }}{{ cert_pem_crt_name }}", dest: "{{ kibana_cert_location }}{{ cert_pem_crt_name }}", owner: "root", group: "root", mode: "0644" }
    - { src: "{{ cert_location }}{{ cert_pem_key_name }}", dest: "{{ kibana_cert_location }}{{ cert_pem_key_name }}", owner: "root", group: "root", mode: "0644" }
    - { src: "{{ cert_location }}{{ cert_ca_chain_name }}", dest: "{{ elastic_cert_location }}{{ cert_ca_chain_name }}", owner: "root", group: "elasticsearch", mode: "0644" }
    - { src: "{{ cert_location }}{{ cert_pem_crt_name }}", dest: "{{ elastic_cert_location }}{{ cert_pem_crt_name }}", owner: "root", group: "elasticsearch", mode: "0644" }
    - { src: "{{ cert_location }}{{ cert_pem_key_name }}", dest: "{{ elastic_cert_location }}{{ cert_pem_key_name }}", owner: "root", group: "elasticsearch", mode: "0644" }

- name: configure_ssl | Configure SSL For Elasticsearch
  lineinfile:
    path: "{{ elastic_conf }}"
    state: present
    line: "{{ item }}"
  with_items:
    - "xpack.security.enabled: true"
    - "xpack.security.http.ssl.enabled: true"
    - "xpack.security.transport.ssl.enabled: true"
    - "xpack.security.transport.ssl.verification_mode: certificate"
    - "xpack.security.http.ssl.key: {{ elastic_cert_location }}{{ cert_pem_key_name }}"
    - "xpack.security.http.ssl.certificate: {{ elastic_cert_location }}{{ cert_pem_crt_name }}"
    - 'xpack.security.http.ssl.certificate_authorities: ["{{ elastic_cert_location }}{{ cert_ca_chain_name }}"]'

- name: configure_ssl | Configure SSL For Kibana
  lineinfile:
    path: "{{ kibana_conf }}"
    state: present
    line: "{{ item }}"
  with_items:
    - "elasticsearch.ssl.certificateAuthorities: {{ kibana_cert_location }}{{ cert_ca_chain_name }}"
    - "server.ssl.enabled: true"
    - "server.ssl.key: {{ kibana_cert_location }}{{ cert_pem_key_name }}"
    - "server.ssl.certificate: {{ kibana_cert_location }}{{ cert_pem_crt_name }}"

- name: configure_ssl | Configure SSL For Kibana | Replace Host Entry with HTTPS
  replace:
    path: "{{ kibana.conf }}"
    regexp: 'elasticsearch.hosts: \["http://{{ server_ip }}:{{ elastic_port}}"]'
    replace: 'elasticsearch.hosts: ["https://{{ server_ip }}:{{ elastic_port}}"]'

- name: configure_ssl | Configure SSL For Logstash Outputs
  blockinfile:
    path: "{{ logstash_output_conf }}"
    owner: root
    group: root
    mode: 0644
    create: true
    backup: true
    block: |
      output {
        if [@metadata][beat] =~ "filebeat" {
          elasticsearch {
            hosts => ["https://{{ server_ip }}:{{ elastic_port }}"]
            cacert => "{{ logstash_cert_location }}{{ cert_ca_chain_name }}"
            index => "%{[@metadata][beat]}-%{+YYYY.MM}"
            manage_template => true
            template_overwrite => true
            template => "/etc/logstash/templates/filebeat.json"
            template_name => "filebeats"
          }
        }
       if [@metadata][beat] =~ "auditbeat" {
          elasticsearch {
            hosts => ["https://{{ server_ip }}:{{ elastic_port }}"]
            cacert => "{{ logstash_cert_location }}{{ cert_ca_chain_name }}"
            index => "%{[@metadata][beat]}-%{+YYYY.MM}"
            manage_template => true
            template_overwrite => true
            template => "/etc/logstash/templates/auditbeat.json"
            template_name => "auditbeats"
          }
        }
        else {
          elasticsearch {
            hosts => ["https://{{ server_ip }}:{{ elastic_port }}"]
            cacert => "{{ logstash_cert_location }}{{ cert_ca_chain_name }}"
            index => "%{[@metadata][beat]}-%{+YYYY.MM}"
            manage_template => false
          }
        }
      }
